{"ast":null,"code":"var _jsxFileName = \"/home/aum/Desktop/Projects/MatchMyCV/matchmycv/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { Client, Account, Storage } from \"appwrite\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const client = new Client();\n  const account = new Account(client);\n  const storage = new Storage(client);\n  client.setEndpoint(\"https://cloud.appwrite.io/v1\").setProject(\"670f76cb0008eca9526a\");\n\n  // Handle file upload to Appwrite storage\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    try {\n      // Upload file to Appwrite storage\n      const result = await storage.createFile(\"670facb80028e21355c3\", \"unique()\", file); // Replace 'bucket_id' with your Appwrite bucket ID\n\n      // Read file content using FileReader (for parsing text)\n      const reader = new FileReader();\n      reader.onload = async event => {\n        const resumeText = event.target.result;\n        try {\n          // Call ChatGPT API via Appwrite endpoint\n          const response = await fetch('http://670faa6966dc03bcb44c.appwrite.global/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              prompt: `Analyze this resume and provide job recommendations: ${resumeText}`\n            })\n          });\n\n          // Check if response is okay\n          if (!response.ok) {\n            throw new Error(`ChatGPT API Error: ${response.status} ${response.statusText}`);\n          }\n          const data = await response.json();\n          setAnalysisResult(data);\n        } catch (error) {\n          console.error(\"ChatGPT API call failed:\", error);\n          alert(`ChatGPT API call failed: ${error.message}`);\n        } finally {\n          setLoading(false);\n        }\n      };\n      reader.readAsText(file); // Reading resume content as text\n\n      alert(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(`Upload failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-10 bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md max-w-xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Welcome to Your Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFileUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0]),\n          className: \"w-full p-2 mb-4 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full p-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          disabled: loading,\n          children: loading ? \"Uploading...\" : \"Upload Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 p-4 bg-gray-100 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Analysis Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Job Recommendations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 16\n          }, this), \" \", analysisResult.recommendations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ATS Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }, this), \" \", analysisResult.ats_score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Suggestions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this), \" \", analysisResult.suggestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"HgOGzdiYUgN4PxPsl9EbqEFjXAw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Client","Account","Storage","useState","jsxDEV","_jsxDEV","Dashboard","_s","file","setFile","analysisResult","setAnalysisResult","loading","setLoading","client","account","storage","setEndpoint","setProject","handleFileUpload","e","preventDefault","result","createFile","reader","FileReader","onload","event","resumeText","target","response","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","status","statusText","data","json","error","console","alert","message","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","files","disabled","recommendations","ats_score","suggestions","_c","$RefreshReg$"],"sources":["/home/aum/Desktop/Projects/MatchMyCV/matchmycv/src/components/Dashboard.js"],"sourcesContent":["import { Client, Account, Storage } from \"appwrite\";\nimport { useState } from \"react\";\n\nconst Dashboard = () => {\n  const [file, setFile] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  \n  const client = new Client();\n  const account = new Account(client);\n  const storage = new Storage(client);\n\n  client\n    .setEndpoint(\"https://cloud.appwrite.io/v1\")\n    .setProject(\"670f76cb0008eca9526a\");\n\n  // Handle file upload to Appwrite storage\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    if (!file) return;\n\n    setLoading(true);\n    \n    try {\n      // Upload file to Appwrite storage\n      const result = await storage.createFile(\"670facb80028e21355c3\", \"unique()\", file); // Replace 'bucket_id' with your Appwrite bucket ID\n      \n      // Read file content using FileReader (for parsing text)\n      const reader = new FileReader();\n      reader.onload = async (event) => {\n        const resumeText = event.target.result;\n\n        try {\n          // Call ChatGPT API via Appwrite endpoint\n          const response = await fetch('http://670faa6966dc03bcb44c.appwrite.global/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              prompt: `Analyze this resume and provide job recommendations: ${resumeText}`\n            }),\n          });\n\n          // Check if response is okay\n          if (!response.ok) {\n            throw new Error(`ChatGPT API Error: ${response.status} ${response.statusText}`);\n          }\n\n          const data = await response.json();\n          setAnalysisResult(data);\n        } catch (error) {\n          console.error(\"ChatGPT API call failed:\", error);\n          alert(`ChatGPT API call failed: ${error.message}`);\n        } finally {\n          setLoading(false);\n        }\n      };\n      reader.readAsText(file); // Reading resume content as text\n\n      alert(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(`Upload failed: ${error.message}`);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen p-10 bg-gray-100\">\n      <div className=\"bg-white p-6 rounded shadow-md max-w-xl mx-auto\">\n        <h2 className=\"text-2xl font-bold mb-4\">Welcome to Your Dashboard</h2>\n\n        {/* Form to upload resume */}\n        <form onSubmit={handleFileUpload}>\n          <input\n            type=\"file\"\n            onChange={(e) => setFile(e.target.files[0])}\n            className=\"w-full p-2 mb-4 border rounded\"\n          />\n          <button\n            type=\"submit\"\n            className=\"w-full p-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            disabled={loading}\n          >\n            {loading ? \"Uploading...\" : \"Upload Resume\"}\n          </button>\n        </form>\n\n        {/* Display Analysis Results */}\n        {analysisResult && (\n          <div className=\"mt-6 p-4 bg-gray-100 rounded shadow\">\n            <h3 className=\"text-xl font-bold mb-4\">Analysis Results</h3>\n            <p><strong>Job Recommendations:</strong> {analysisResult.recommendations}</p>\n            <p><strong>ATS Score:</strong> {analysisResult.ats_score}</p>\n            <p><strong>Suggestions:</strong> {analysisResult.suggestions}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}