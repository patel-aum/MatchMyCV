{"ast":null,"code":"var _jsxFileName = \"/home/aum/Desktop/Projects/MatchMyCV/matchmycv/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { Client, Account, Storage } from \"appwrite\";\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const navigate = useNavigate(); // Hook for navigation\n\n  const client = new Client();\n  const account = new Account(client);\n  const storage = new Storage(client);\n  client.setEndpoint(\"https://cloud.appwrite.io/v1\").setProject(\"670f76cb80028e21355c3\"); // Replace with your Project ID\n\n  // Handle file upload to Appwrite storage\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    setLoading(true);\n    try {\n      // Upload file to Appwrite storage\n      const result = await storage.createFile(\"670facb80028e21355c3\", \"unique()\", file); // Replace 'bucket_id' with your Appwrite bucket ID\n\n      // Read file content using FileReader (for parsing text)\n      const reader = new FileReader();\n      reader.onload = async event => {\n        const resumeText = event.target.result;\n        setProcessing(true); // Set processing state to true\n\n        try {\n          // Call ChatGPT API via Appwrite endpoint\n          const response = await fetch('http://670faa6966dc03bcb44c.appwrite.global/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              prompt: `Analyze this resume and provide job recommendations: ${resumeText}`\n            })\n          });\n\n          // Check if response is okay\n          if (!response.ok) {\n            throw new Error(`ChatGPT API Error: ${response.status} ${response.statusText}`);\n          }\n          const data = await response.json();\n          setAnalysisResult(data);\n          // Navigate to the results page\n          navigate('/results', {\n            state: data\n          }); // Pass the data to the results page\n        } catch (error) {\n          console.error(\"ChatGPT API call failed:\", error);\n          alert(`ChatGPT API call failed: ${error.message}`);\n        } finally {\n          setProcessing(false); // Reset processing state\n        }\n      };\n      reader.readAsText(file); // Reading resume content as text\n      alert(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(`Upload failed: ${error.message}`);\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-10 bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md max-w-xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Welcome to Your Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFileUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0]),\n          className: \"w-full p-2 mb-4 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full p-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          disabled: loading,\n          children: loading ? \"Uploading...\" : \"Upload Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), processing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: \"Processing... Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/T/6rMrQsxUuq9lBhaJr9gcNS94=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Client","Account","Storage","useState","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","file","setFile","loading","setLoading","processing","setProcessing","navigate","client","account","storage","setEndpoint","setProject","handleFileUpload","e","preventDefault","result","createFile","reader","FileReader","onload","event","resumeText","target","response","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","status","statusText","data","json","setAnalysisResult","state","error","console","alert","message","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","files","disabled","_c","$RefreshReg$"],"sources":["/home/aum/Desktop/Projects/MatchMyCV/matchmycv/src/components/Dashboard.js"],"sourcesContent":["import { Client, Account, Storage } from \"appwrite\";\nimport { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const navigate = useNavigate(); // Hook for navigation\n\n  const client = new Client();\n  const account = new Account(client);\n  const storage = new Storage(client);\n\n  client\n    .setEndpoint(\"https://cloud.appwrite.io/v1\")\n    .setProject(\"670f76cb80028e21355c3\"); // Replace with your Project ID\n\n  // Handle file upload to Appwrite storage\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    if (!file) return;\n\n    setLoading(true);\n\n    try {\n      // Upload file to Appwrite storage\n      const result = await storage.createFile(\"670facb80028e21355c3\", \"unique()\", file); // Replace 'bucket_id' with your Appwrite bucket ID\n\n      // Read file content using FileReader (for parsing text)\n      const reader = new FileReader();\n      reader.onload = async (event) => {\n        const resumeText = event.target.result;\n\n        setProcessing(true); // Set processing state to true\n\n        try {\n          // Call ChatGPT API via Appwrite endpoint\n          const response = await fetch('http://670faa6966dc03bcb44c.appwrite.global/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              prompt: `Analyze this resume and provide job recommendations: ${resumeText}`\n            }),\n          });\n\n          // Check if response is okay\n          if (!response.ok) {\n            throw new Error(`ChatGPT API Error: ${response.status} ${response.statusText}`);\n          }\n\n          const data = await response.json();\n          setAnalysisResult(data);\n          // Navigate to the results page\n          navigate('/results', { state: data }); // Pass the data to the results page\n        } catch (error) {\n          console.error(\"ChatGPT API call failed:\", error);\n          alert(`ChatGPT API call failed: ${error.message}`);\n        } finally {\n          setProcessing(false); // Reset processing state\n        }\n      };\n\n      reader.readAsText(file); // Reading resume content as text\n      alert(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(`Upload failed: ${error.message}`);\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen p-10 bg-gray-100\">\n      <div className=\"bg-white p-6 rounded shadow-md max-w-xl mx-auto\">\n        <h2 className=\"text-2xl font-bold mb-4\">Welcome to Your Dashboard</h2>\n\n        {/* Form to upload resume */}\n        <form onSubmit={handleFileUpload}>\n          <input\n            type=\"file\"\n            onChange={(e) => setFile(e.target.files[0])}\n            className=\"w-full p-2 mb-4 border rounded\"\n          />\n          <button\n            type=\"submit\"\n            className=\"w-full p-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            disabled={loading}\n          >\n            {loading ? \"Uploading...\" : \"Upload Resume\"}\n          </button>\n        </form>\n\n        {/* Loading Indicator */}\n        {processing && <div className=\"mt-4 text-center\">Processing... Please wait.</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}